{"ast":null,"code":"var _jsxFileName = \"/Users/gaeon/Documents/\\u1109\\u1175\\u11AB\\u1112\\u1161\\u11AB\\u1110\\u116E\\u110C\\u1161\\u110C\\u1173\\u11BC\\u1100\\u116F\\u11AB_\\u1111\\u1173\\u1103\\u1175\\u110B\\u1161/shinhan_pda/react-base/src/components/CountComponent.js\",\n  _s = $RefreshSig$();\n//import React, {useCallback, useEffect, useState, } from \"react\";\n//export default function CountComponent(){\n// const [count, setCount]=useState(0)\n// const addCount=()=>{\n//     setCount(count+1);\n// }\n\n// useEffect(()=>{\n//     console.log(\"데이터 받아오기! 이 함수는 한번만 실행됩니다.\");\n//     return ()=>{\n//         console.log(\"메모리를 잡아먹으면 리소스 해제 하는 함수로 return해 주어야 합니다.\")\n//         //useeffectreturn 함수: 컴포넌트가 없어질때, 함수가 실행이 다시 될때 실행됨.\n//         //리소스가 해제되고 새로운 실행이 등록됨.\n//     }\n// },[])\n\n// useEffect(()=>{\n//     console.log(`카운트가 증가할때마다 실행!\\n -count:${count}`);\n//     return ()=>{\n//         console.log(\"그럼\")}\n// },[count])\n\n// return (\n//     <div>\n//         <div>{count}</div>\n//         <button onClick={addCount}>1증가</button>\n//     </div>\n// )\n\n//}\nimport React, { useCallback, useEffect, useState } from 'react';\n//dependency array가 변경되면 콜백 함수 자체를 반환\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountComponent() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [value1, setValue1] = useState(true);\n  const ChangeValue = () => {\n    setValue1(v => !v);\n  };\n\n  // const addCount = ()=>{\n  //     setCount(count+1);\n  // }\n\n  const addCount = useCallback(() => {\n    setCount(count + 1);\n  }, []); //빈값 새로 정의하지 않겠다 처음 로드 될때만 0->1\n  //값이 있으면 새로 정의하겠다.\n\n  useEffect(() => {\n    console.log(\"데이터 받아오기! 이 함수는 한 번 호출됩니다.\");\n    return () => {\n      console.log(\"메모리를 잡아 먹으면 리소스를 해제하는 함수를 return 해주셔야 합니다.\");\n    };\n  }, []);\n  useEffect(() => {\n    console.log(`카운트가 증가될 때마다 실행됩니다. \\n - count: ${count}`);\n    return () => {\n      console.log(\"기존 uesEffect에서 사용한 것들을 반환합니다.\", count);\n    };\n  }, [count]);\n\n  // useEffect(FunctionA, [dependency])\n  // let A = FunctionA()\n  // if (dependency is changed){\n  //     A();\n  //     A = FunctionA()\n  // }\n  // A();\n  // A= FunctionA();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: value1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ChangeValue,\n        children: \"State\\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCount,\n        children: \"1 \\uC99D\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(CountComponent, \"2bI5zpZDH9uFLFT1CLI96IeDRpU=\");\n_c = CountComponent;\nvar _c;\n$RefreshReg$(_c, \"CountComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","jsxDEV","_jsxDEV","CountComponent","_s","count","setCount","value1","setValue1","ChangeValue","v","addCount","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gaeon/Documents/신한투자증권_프디아/shinhan_pda/react-base/src/components/CountComponent.js"],"sourcesContent":["//import React, {useCallback, useEffect, useState, } from \"react\";\n//export default function CountComponent(){\n    // const [count, setCount]=useState(0)\n    // const addCount=()=>{\n    //     setCount(count+1);\n    // }\n\n    // useEffect(()=>{\n    //     console.log(\"데이터 받아오기! 이 함수는 한번만 실행됩니다.\");\n    //     return ()=>{\n    //         console.log(\"메모리를 잡아먹으면 리소스 해제 하는 함수로 return해 주어야 합니다.\")\n    //         //useeffectreturn 함수: 컴포넌트가 없어질때, 함수가 실행이 다시 될때 실행됨.\n    //         //리소스가 해제되고 새로운 실행이 등록됨.\n    //     }\n    // },[])\n\n\n    // useEffect(()=>{\n    //     console.log(`카운트가 증가할때마다 실행!\\n -count:${count}`);\n    //     return ()=>{\n    //         console.log(\"그럼\")}\n    // },[count])\n\n    // return (\n    //     <div>\n    //         <div>{count}</div>\n    //         <button onClick={addCount}>1증가</button>\n    //     </div>\n    // )\n   \n//}\nimport React, {useCallback, useEffect, useState, } from 'react';\n//dependency array가 변경되면 콜백 함수 자체를 반환\nexport default function CountComponent(){\n    const [count, setCount] = useState(0);\n    const [value1, setValue1] = useState(true);\n\n    const ChangeValue = ()=>{\n        setValue1((v)=>!v);\n    }\n\n    // const addCount = ()=>{\n    //     setCount(count+1);\n    // }\n\n    const addCount=useCallback(()=>{\n        setCount(count+1);\n    }, []) //빈값 새로 정의하지 않겠다 처음 로드 될때만 0->1\n    //값이 있으면 새로 정의하겠다.\n\n    useEffect(()=>{\n        console.log(\"데이터 받아오기! 이 함수는 한 번 호출됩니다.\");\n        return ()=>{\n            console.log(\"메모리를 잡아 먹으면 리소스를 해제하는 함수를 return 해주셔야 합니다.\");\n        }\n    }, []);\n    \n\n    useEffect(()=>{\n        console.log(`카운트가 증가될 때마다 실행됩니다. \\n - count: ${count}`);\n        return ()=>{\n            console.log(\"기존 uesEffect에서 사용한 것들을 반환합니다.\", count)\n        }\n    }, [count]);\n\n\n\n    // useEffect(FunctionA, [dependency])\n    // let A = FunctionA()\n    // if (dependency is changed){\n    //     A();\n    //     A = FunctionA()\n    // }\n    // A();\n    // A= FunctionA();\n\n    return (\n        <div>\n            <div>\n                <div>{value1}</div>\n                <button onClick={ChangeValue}>State변경</button>\n            </div>\n\n            <div>\n                <div>{count}</div>\n                <button onClick={addCount}>1 증가</button>\n            </div>\n        </div>\n    )\n}\n"],"mappings":";;AAAA;AACA;AACI;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEJ;AACA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAS,OAAO;AAC/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,WAAW,GAAGA,CAAA,KAAI;IACpBD,SAAS,CAAEE,CAAC,IAAG,CAACA,CAAC,CAAC;EACtB,CAAC;;EAED;EACA;EACA;;EAEA,MAAMC,QAAQ,GAACb,WAAW,CAAC,MAAI;IAC3BQ,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,EAAC;EACP;;EAEAN,SAAS,CAAC,MAAI;IACVa,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,OAAO,MAAI;MACPD,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAC7D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGNd,SAAS,CAAC,MAAI;IACVa,OAAO,CAACC,GAAG,CAAE,mCAAkCR,KAAM,EAAC,CAAC;IACvD,OAAO,MAAI;MACPO,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAER,KAAK,CAAC;IACvD,CAAC;EACL,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAIX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIH,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,EAAMP;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnBhB,OAAA;QAAQiB,OAAO,EAAEV,WAAY;QAAAK,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAENhB,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,EAAMT;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClBhB,OAAA;QAAQiB,OAAO,EAAER,QAAS;QAAAG,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACd,EAAA,CAxDuBD,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}