{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n//state관리가 component 상태의 관리\nexport default function BlinkComponent({\n  text\n}) {\n  _s();\n  const [showText, setShowText] = useState(true); //비동기적으로 동작\n  //     //렌더링 이후 변수값 변경\n  //     setShowText(showText)\n  //     useEffect(()=>{\n  //         const timeoutId=setInterval(()=>{//ms마다 함수를 실행시킴.\n  //             setShowText(showText=>!showText);  //한번 등록하고 계속 사용 차이\n  //         },1000)\n  //         return ()=>{clearInterval(timeoutId)}\n\n  // }   ,[])\n  //     return (\n  //         <div>\n  //             {showText? text:null}\n  //         </div>\n  //     )\n  // }\n  // export default function BlinkComponent({ text }) {\n  //     const [showText, setShowText] = useState(true);\n\n  //     useEffect(() => {\n  //         const intervalId = setInterval(() => {\n  //             setShowText(!showText);\n  //         }, 1000); \n\n  //         return () => clearInterval(intervalId); //useEffect 훅이 다음으로 실행되기 전에 실행됩니다. 이 cleanup 함수는 이전에 설정한 타이머를 클리어하여 메모리 누수를 방지하고, 새로운 타이머가 설정되기 전에 이전 타이머를 제거합니다.\n  //     }, [showText]); \n\n  //     return (\n  //         <div>\n  //             {showText && text} \n  //         </div>\n  //     );\n  // }\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //1.이 함수로 만들어진 시점에 상수로 true가 들어가기 때문에\n      console.log(\"호출\");\n      setShowText(!showText); //2. 계속 false로 바꾸고 있음. \n    }, 3000);\n    return () => {\n      clearInterval(intervalId);\n    }; //3. 해제 다시 등록(dependency에 의해)\n  }, [showText]);\n} // 해제하고 다시 등록하느냐의 차이\n_s(BlinkComponent, \"E1f70Tfr+XoAeID6rZpraC81J4E=\");\n_c = BlinkComponent;\nvar _c;\n$RefreshReg$(_c, \"BlinkComponent\");","map":{"version":3,"names":["React","useEffect","useState","BlinkComponent","text","_s","showText","setShowText","intervalId","setInterval","console","log","clearInterval","_c","$RefreshReg$"],"sources":["/Users/gaeon/Documents/신한투자증권_프디아/shinhan_pda/react-base/src/components/BlinkComponent.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n//state관리가 component 상태의 관리\nexport default function BlinkComponent({text}){\n    const [showText, setShowText]=useState(true);//비동기적으로 동작\n//     //렌더링 이후 변수값 변경\n//     setShowText(showText)\n//     useEffect(()=>{\n//         const timeoutId=setInterval(()=>{//ms마다 함수를 실행시킴.\n//             setShowText(showText=>!showText);  //한번 등록하고 계속 사용 차이\n//         },1000)\n//         return ()=>{clearInterval(timeoutId)}\n        \n\n// }   ,[])\n//     return (\n//         <div>\n//             {showText? text:null}\n//         </div>\n//     )\n// }\n// export default function BlinkComponent({ text }) {\n//     const [showText, setShowText] = useState(true);\n\n//     useEffect(() => {\n//         const intervalId = setInterval(() => {\n//             setShowText(!showText);\n//         }, 1000); \n        \n//         return () => clearInterval(intervalId); //useEffect 훅이 다음으로 실행되기 전에 실행됩니다. 이 cleanup 함수는 이전에 설정한 타이머를 클리어하여 메모리 누수를 방지하고, 새로운 타이머가 설정되기 전에 이전 타이머를 제거합니다.\n//     }, [showText]); \n\n//     return (\n//         <div>\n//             {showText && text} \n//         </div>\n//     );\n// }\nuseEffect(()=>{\n    const intervalId = setInterval(()=>{ //1.이 함수로 만들어진 시점에 상수로 true가 들어가기 때문에\n        console.log(\"호출\");\n        setShowText(!showText); //2. 계속 false로 바꾸고 있음. \n    }, 3000);\n    return ()=>{clearInterval(intervalId);} //3. 해제 다시 등록(dependency에 의해)\n}, [showText]);\n} // 해제하고 다시 등록하느냐의 차이\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD;AACA,eAAe,SAASC,cAAcA,CAAC;EAACC;AAAI,CAAC,EAAC;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAACL,QAAQ,CAAC,IAAI,CAAC,CAAC;EACjD;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACAD,SAAS,CAAC,MAAI;IACV,MAAMO,UAAU,GAAGC,WAAW,CAAC,MAAI;MAAE;MACjCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjBJ,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAI;MAACM,aAAa,CAACJ,UAAU,CAAC;IAAC,CAAC,EAAC;EAC5C,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;AACd,CAAC,CAAC;AAAAD,EAAA,CA1CsBF,cAAc;AAAAU,EAAA,GAAdV,cAAc;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}