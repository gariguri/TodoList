{"ast":null,"code":"var _jsxFileName = \"/Users/gaeon/Documents/\\u1109\\u1175\\u11AB\\u1112\\u1161\\u11AB\\u1110\\u116E\\u110C\\u1161\\u110C\\u1173\\u11BC\\u1100\\u116F\\u11AB_\\u1111\\u1173\\u1103\\u1175\\u110B\\u1161/shinhan_pda/react-base/src/components/ThemeProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, createContext } from \"react\";\n//1. Context 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  };\n  //2. Context.Provider 정의및 공유할 객체를 value props로 전달.\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n  // 3. value Props로 전달된 객체를 공유할 컴포넌트를 Context.Provider 내부에 위치\n}\n_s(ThemeProvider, \"1NR3O0/bzzhjlLyt740h+JhxH9c=\");\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  return {\n    theme,\n    toggleTheme\n  };\n}\n_s2(useTheme, \"IIXwVh4tgXz8A7oGuzzm2qye+n4=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","useState","useContext","createContext","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/gaeon/Documents/신한투자증권_프디아/shinhan_pda/react-base/src/components/ThemeProvider.js"],"sourcesContent":["import React, {useState, useContext, createContext} from \"react\";\n//1. Context 생성\nexport const ThemeContext=createContext();\n\nexport function ThemeProvider({children}){\n    const [theme, setTheme]=useState(\"light\");\n\n    const toggleTheme=()=>{\n        setTheme(prevTheme=>prevTheme===\"light\"?\"dark\":\"light\");\n    };\n    //2. Context.Provider 정의및 공유할 객체를 value props로 전달.\n    return(\n        <ThemeContext.Provider value={{theme, toggleTheme}}>\n            {children}\n        </ThemeContext.Provider>\n    );\n    // 3. value Props로 전달된 객체를 공유할 컴포넌트를 Context.Provider 내부에 위치\n    \n}\nexport function useTheme(){\n    const {theme, toggleTheme}=useContext(ThemeContext)\n    return {theme, toggleTheme}\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,QAAO,OAAO;AAChE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAACH,aAAa,CAAC,CAAC;AAEzC,OAAO,SAASI,aAAaA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACV,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMW,WAAW,GAACA,CAAA,KAAI;IAClBD,QAAQ,CAACE,SAAS,IAAEA,SAAS,KAAG,OAAO,GAAC,MAAM,GAAC,OAAO,CAAC;EAC3D,CAAC;EACD;EACA,oBACIR,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAACL,KAAK;MAAEE;IAAW,CAAE;IAAAJ,QAAA,EAC9CA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;EAE5B;AAEJ;AAACV,EAAA,CAdeF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAe7B,OAAO,SAASc,QAAQA,CAAA,EAAE;EAAAC,GAAA;EACtB,MAAM;IAACZ,KAAK;IAAEE;EAAW,CAAC,GAACV,UAAU,CAACI,YAAY,CAAC;EACnD,OAAO;IAACI,KAAK;IAAEE;EAAW,CAAC;AAC/B;AAACU,GAAA,CAHeD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}